{"version":3,"sources":["components/AnalogClock/Clock.js","components/Digit/Digit.js","components/Conditional/Conditional.js","components/Toggle/Toggle.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","size","showSecond","config","hour","minute","visible","hourHand","React","createRef","minuteHand","useEffect","isNaN","current","h","m","style","transform","console","log","clockClass","className","ref","Digit","digit","number","topLeft","topRight","middleLeft","middleRight","bottomLeft","bottomRight","staticClock","Conditional","when","children","propTypes","PropTypes","bool","Toggle","onClick","label","checked","type","onChange","App","useState","Date","time","setTime","setHour","hour2","setHour2","setMinute","minute2","setMinute2","seconds","setSeconds","seconds2","setSeconds2","optionsVisible","setOptionsVisible","is24hr","setIs24hr","showSeconds","setShowSeconds","showDivider","setShowDivider","interval","setInterval","clearInterval","hourStr","getHours","toString","padStart","minuteStr","getMinutes","secondsStr","getSeconds","Number","optionsOverlay","e","stopPropagation","pkg","name","version","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.803ca01e.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.css';\n\n/**\n * A nicer clock with clean animation\n * https://codepen.io/dope/pen/KJYMZz\n * @param {*} props\n */\nfunction Clock(props) {\n  const { size = \"regular\", showSecond = false, config = { hour: 0, minute: 0, visible: true } } = props;\n\n  const { hour, minute, visible } = config;\n  const hourHand = React.createRef(null);\n  const minuteHand = React.createRef(null);\n\n  React.useEffect(() => {\n    if (isNaN(hour) || isNaN(minute)) return;\n    if (!!hourHand?.current && !!minuteHand?.current) {\n      const h = hour * 30;\n      const m = minute * 6;\n      hourHand.current.style.transform = `rotate(${h}deg)`;\n      minuteHand.current.style.transform = `rotate(${m}deg)`;\n\n\n    } else {\n      console.log(hourHand)\n    }\n  }, [hourHand, minuteHand, hour, minute])\n\n\n\n  const clockClass = \"wrap\" + (visible ? \"\" : \" hidden\");\n\n  return (\n    <div className={`clock ${size}`} >\n      <div className={clockClass} >\n        <span ref={hourHand} className=\"hour\"></span>\n        <span ref={minuteHand} className=\"minute\"></span>\n        {showSecond && <span className=\"second\"></span>}\n        <span className=\"dot\"></span>\n      </div >\n    </div >\n  )\n}\n\nexport default Clock;\n","import React from 'react';\nimport Clock from '../AnalogClock/Clock';\nimport './Digit.css';\n\n/**\n * This component displays a number - using 6 AnalogClocks \n * @param {*} props\n */\n\nfunction Digit(props) {\n    const { number, size = \"small\" } = props;\n    let digit;\n    switch (number) {\n        case 1:\n            digit = {\n                topLeft: { hour: 0, minute: 30, visible: false },\n                topRight: { hour: 6, minute: 30, visible: true },\n                middleLeft: { hour: 6, minute: 15, visible: false },\n                middleRight: { hour: 6, minute: 60, visible: true },\n                bottomLeft: { hour: 3, minute: 60, visible: false },\n                bottomRight: { hour: 12, minute: 60, visible: true },\n            }\n            break;\n        case 2:\n            digit = {\n                topLeft: { hour: 3, minute: 15, visible: true },\n                topRight: { hour: 9, minute: 30, visible: true },\n                middleLeft: { hour: 6, minute: 15, visible: true },\n                middleRight: { hour: 12, minute: 45, visible: true },\n                bottomLeft: { hour: 3, minute: 60, visible: true },\n                bottomRight: { hour: 9, minute: 45, visible: true },\n            }\n            break;\n        case 3:\n            digit = {\n                topLeft: { hour: 3, minute: 15, visible: true },\n                topRight: { hour: 9, minute: 30, visible: true },\n                middleLeft: { hour: 3, minute: 15, visible: true },\n                middleRight: { hour: 12, minute: 45, visible: true },\n                bottomLeft: { hour: 3, minute: 15, visible: true },\n                bottomRight: { hour: 9, minute: 0, visible: true },\n            }\n            break;\n        case 4:\n            digit = {\n                topLeft: { hour: 6, minute: 30, visible: true },\n                topRight: { hour: 6, minute: 30, visible: true },\n                middleLeft: { hour: 12, minute: 15, visible: true },\n                middleRight: { hour: 12, minute: 45, visible: true },\n                bottomLeft: { hour: 3, minute: 15, visible: false },\n                bottomRight: { hour: 12, minute: 60, visible: true },\n            }\n            break;\n        case 5:\n            digit = {\n                topLeft: { hour: 6, minute: 15, visible: true },\n                topRight: { hour: 9, minute: 45, visible: true },\n                middleLeft: { hour: 12, minute: 15, visible: true },\n                middleRight: { hour: 6, minute: 45, visible: true },\n                bottomLeft: { hour: 3, minute: 15, visible: true },\n                bottomRight: { hour: 9, minute: 0, visible: true },\n            }\n            break;\n        case 6:\n            digit = {\n                topLeft: { hour: 6, minute: 15, visible: true },\n                topRight: { hour: 9, minute: 45, visible: true },\n                middleLeft: { hour: 12, minute: 30, visible: true },\n                middleRight: { hour: 6, minute: 45, visible: true },\n                bottomLeft: { hour: 12, minute: 15, visible: true },\n                bottomRight: { hour: 9, minute: 0, visible: true },\n            }\n            break;\n        case 7:\n            digit = {\n                topLeft: { hour: 3, minute: 15, visible: true },\n                topRight: { hour: 9, minute: 30, visible: true },\n                middleLeft: { hour: 12, minute: 30, visible: false },\n                middleRight: { hour: 12, minute: 30, visible: true },\n                bottomLeft: { hour: 12, minute: 15, visible: false },\n                bottomRight: { hour: 12, minute: 60, visible: true },\n            }\n            break;\n        case 8:\n            digit = {\n                topLeft: { hour: 3, minute: 30, visible: true },\n                topRight: { hour: 9, minute: 30, visible: true },\n                middleLeft: { hour: 3, minute: 30, visible: true },\n                middleRight: { hour: 9, minute: 30, visible: true },\n                bottomLeft: { hour: 3, minute: 60, visible: true },\n                bottomRight: { hour: 9, minute: 0, visible: true },\n            }\n            break;\n        case 9:\n            digit = {\n                topLeft: { hour: 3, minute: 30, visible: true },\n                topRight: { hour: 9, minute: 30, visible: true },\n                middleLeft: { hour: 3, minute: 0, visible: true },\n                middleRight: { hour: 12, minute: 30, visible: true },\n                bottomLeft: { hour: 3, minute: 15, visible: true },\n                bottomRight: { hour: 9, minute: 0, visible: true },\n            }\n            break;\n        default:\n            digit = {\n                topLeft: { hour: 3, minute: 30, visible: true },\n                topRight: { hour: 9, minute: 30, visible: true },\n                middleLeft: { hour: 12, minute: 30, visible: true },\n                middleRight: { hour: 12, minute: 30, visible: true },\n                bottomLeft: { hour: 12, minute: 15, visible: true },\n                bottomRight: { hour: 9, minute: 0, visible: true },\n            }\n            break;\n    }\n\n\n    return (\n        <div className=\"analog-digit\">\n            <Clock staticClock config={digit.topLeft} size={size} />\n            <Clock staticClock config={digit.topRight} size={size} />\n            <Clock staticClock config={digit.middleLeft} size={size} />\n            <Clock staticClock config={digit.middleRight} size={size} />\n            <Clock staticClock config={digit.bottomLeft} size={size} />\n            <Clock staticClock config={digit.bottomRight} size={size} />\n        </div>\n    );\n}\n\nexport default Digit;\n","import PropTypes from 'prop-types';\n\nconst Conditional = (props = { when: true, children: null }) => {\n    const { when, children } = props;\n    if (!when) return null;\n    return (when && children);\n}\n\nConditional.propTypes = {\n    /** \n     * When true, renders the children\n     * @default true\n     */\n    when: PropTypes.bool\n}\nexport default Conditional;","import React from \"react\";\nimport \"./Toggle.css\";\n\nconst Toggle = (props) => {\n    const { onClick, label = \"\", checked = false } = props;\n    return (\n        <div className=\"toggleContainer\">\n            <p>{label}</p>\n            <label className=\"switch\" >\n                <input type=\"checkbox\" checked={checked} onChange={onClick} />\n                <span className=\"slider round\"></span>\n            </label>\n        </div>);\n}\n\nexport default Toggle;","import React, { useState, useEffect } from 'react';\nimport Digit from './components/Digit/Digit';\nimport Conditional from './components/Conditional/Conditional';\nimport Toggle from \"./components/Toggle/Toggle\";\nimport pkg from '../package.json';\n\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState(new Date());\n  const [hour, setHour] = useState(0);\n  const [hour2, setHour2] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [minute2, setMinute2] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [seconds2, setSeconds2] = useState(0);\n\n  const [optionsVisible, setOptionsVisible] = useState(false);\n\n  /** Options */\n  const [is24hr, setIs24hr] = useState(false);\n  const [showSeconds, setShowSeconds] = useState(false);\n  const [showDivider, setShowDivider] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(new Date()), 1000);\n    return () => {\n      clearInterval(interval);\n    }\n  });\n\n  useEffect(() => {\n    // 12 hr time\n    const timer = (is24hr || time.getHours() <= 12) ? time.getHours() : time.getHours() % 12;\n\n    const hourStr = (timer).toString().padStart(2, \"0\");\n    const minuteStr = (time.getMinutes().toString().padStart(2, 0));\n    const secondsStr = (time.getSeconds().toString().padStart(2, 0));\n\n    setHour(Number(hourStr[0]));\n    setHour2(Number(hourStr[1]));\n    setMinute(Number(minuteStr[0]));\n    setMinute2(Number(minuteStr[1]));\n    setSeconds(Number(secondsStr[0]));\n    setSeconds2(Number(secondsStr[1]));\n  }, [time, is24hr]);\n\n  const optionsOverlay = <div className=\"overlay\" >\n    <div className=\"optionsContainer\" onClick={(e) => e.stopPropagation()}>\n      <h2>Clocktime</h2>\n      <div className=\"options\">\n        <h3>Options</h3>\n        <Toggle\n          label=\"Seconds\"\n          checked={showSeconds}\n          onClick={() => setShowSeconds(!showSeconds)} />\n        <Toggle\n          label=\"24 hours\"\n          checked={is24hr}\n          onClick={() => setIs24hr(!is24hr)} />\n        <Toggle\n          label=\"Divider\"\n          checked={showDivider}\n          onClick={() => setShowDivider(!showDivider)} />\n        <h3>Background</h3>\n        <p>Coming soon...</p>\n        <h3>Save preferences</h3>\n        <p>Coming soon...</p>\n      </div>\n      <button className=\"closeButton\" onClick={() => setOptionsVisible(false)}>Close</button>\n    </div>\n  </div>;\n\n  return (\n    <>\n      <Conditional when={optionsVisible}>\n        {optionsOverlay}\n      </Conditional>\n      <div className=\"app\">\n        <div className=\"time\">\n          <Digit number={hour} />\n          <Digit number={hour2} />\n        </div>\n        <Conditional when={showDivider}><div className=\"divider\">:</div></Conditional>\n        <div className=\"time\">\n          <Digit number={minute} />\n          <Digit number={minute2} />\n        </div>\n        <Conditional when={showSeconds}>\n          <Conditional when={showDivider}><div className=\"divider\">:</div></Conditional>\n          <div className=\"time\">\n            <Digit number={seconds} />\n            <Digit number={seconds2} />\n          </div>\n        </Conditional>\n        <span><span className=\"optionsBtn\" onClick={() => setOptionsVisible(true)}>options</span>  | {`${pkg.name} (${pkg.version})`}</span>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}